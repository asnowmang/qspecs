#! /bin/sh
## Version 0.1.3
## This script is ISC licensed
## asnowmang

## Currently supports OpenBSD and OS X



# OS Detection
OS=$(uname -s)


# Manufacturer
case $OS in
    Darwin)
	man="Apple, Inc."
	;;
    OpenBSD)
	man=$(sysctl -n hw.vendor)
	;;
esac


# Device model
case $OS in
    Darwin)
	model=$(sysctl -n hw.model)
	;;
    OpenBSD)
	model=$(sysctl -n hw.product)
	;;
    Linux)
	model=$(cat /proc/cpuinfo | sed 's/.*: //' | sed -n 2p)
	;;
esac


# CPU model and clock
case $OS in
    Darwin)
	CPU=$(sysctl -n machdep.cpu.brand_string | sed 's/@.*//')
	clock="@ $(dc -e $(sysctl -n hw.cpufrequency)d1000d*/n[MHz]p)"
	;;
    OpenBSD)
	CPU=$(sysctl -n hw.model)
	;;
    Linux)
	CPU=$(cat /proc/cpuinfo | sed 's/.*: //' | sed -n 1p)
	;;
esac


# CPU temp
case $OS in
    Darwin)
	tempmon=/Applications/TemperatureMonitor.app/Contents/MacOS/tempmonitor
	CPUtemp=$(echo "$($tempmon -a -l | grep "A DIODE")" | sed 's/.*: //g;s/C/°C/;s/ //')
	;;
    OpenBSD)
	CPUtemp=$(sysctl -n hw.sensors.cpu0.temp0 | sed 's/'.00'//')
	;;
    Linux)
	CPUtemp=$(sensors | awk '{ print $2 }' | sed -n 's/+//;7p')
esac


# GPU
case $OS in
    Darwin)
    gpu=$(system_profiler SPDisplaysDataType | sed -n 's/^[ \t]*//;s/://;s/ATI/ATi/;3p')
    ;;
    OpenBSD)
    ;;
esac

# GPU temp
case $OS in
    Darwin)
	GPUtemp=$(tempmon -a | sed -n 's/ /°/;7p')
    ;;
    OpenBSD)
    ;;
    Linux)
	GPUtemp=$(sensors | awk '{ print $2 }' | sed -n 's/+//;3p')
	;;
esac

		  


# RAM
case $OS in
    Darwin)
	RAM=$(sysctl -n hw.memsize)
	;;
    OpenBSD)
	RAM=$(sysctl -n hw.physmem)
	;;
    Linux)
	RAM=$(dc -e $(free | awk '{ print $2 }' | sed -n 2p)d1024*p)
	;;
esac


# Storage
count="1"
sto="0"
p=$(df -k -l | wc -l | sed 's/ //g')
until [ $count = $p ];
do
    count=$(dc -e "$count"d1+p)
    part=$(df -k -l | awk '{ print $2 }' | sed -n "$count"p)
    sto=$(dc -e "$sto"d"$part"+p)
done
t=$(echo $sto | wc -c | sed 's/ //g')
case $t in
    6 | 7)
        sto=$(dc -e "$sto"d1024/n[MiB]p)
        ;;
    8 | 9 | 10)
        sto=$(dc -e "$sto"d1024d*/n[GiB]p)
        ;;
    11 | 12 | 13) 
	sto=$(dc -e "$sto"d1024dd**/n[TiB]p)
	;;
esac


# OS
case $OS in
    Darwin)
	OSV="$(sw_vers -productName) $(sw_vers -productVersion) $(uname -p | sed 's/i386/x86_64/;s/powerpc/PowerPC/')"
	;;
    OpenBSD)
	OSV=$(uname -srm)
	;;
    Linux)
	OSV="Debian $(cat /etc/*_version)"
	;;
esac


# Kernel
case $OS in
    Darwin)
	kern="XNU$(uname -v | sed 's#.*;##;s#/.*##;s#root:xnu-##')"
	;;
    OpenBSD)
	kern=$(uname -sr)
	;;
    Linux)
	kern=$(uname -sr)
	;;
esac


# Packages
case $OS in
    Darwin)
	pkg=$(dc -e $(pkgin list | wc -l)d$(brew list | wc -l | sed 's/ //g')+p)
	;;
    OpenBSD)
	pkg=$(pkg_info | wc -l | sed 's/[^0-9]*//')
	;;
esac


# Uptime
up=$(uptime | sed ';s/,.*//;s/^.*up //;')


# Shell
s="$(basename $SHELL)"



########
# Output
 
# Manufacturer
echo "\n Manufacturer:\t $man"

# Model
echo " Model:\t\t $model"

# CPU model & clock
echo " CPU:\t\t $(echo $CPU | sed 's/CPU //;s/(TM)//;s/(R)//') $clock"

# CPU temp
echo " CPU Temp:\t $CPUtemp"

# GPU model
echo " GPU:\t\t $gpu"

# GPU temp
echo " GPU Temp:\t $GPUtemp"

# RAM
echo " RAM:\t\t $(dc -e "$RAM"d1024d*/n[MiB]p)"

# Storage
echo " Storage:\t $sto"

# OS
echo " OS:\t\t $OSV"

# Kernel
echo " Kernel:\t $kern"

# Packages
echo " Packages:\t $pkg"

# Uptime
echo " Uptime:\t $up"

# Shell
echo " Shell:\t\t $s\n"
